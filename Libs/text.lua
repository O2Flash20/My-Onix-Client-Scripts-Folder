--local letterCoords = {{1, 3}, {2, 3}, {3, 3}, {4, 3}, {5, 3}, {6, 3}, {7, 3}, {8, 3}, {9, 3}, a={1, 6}, b={2, 6}, c={3, 6}, d={4, 6}, e={5, 6}, f={6, 6}, g={7, 6}, h={8, 6}, i={9, 6}, j={10, 6}, k={11, 6}, l={12, 6}, m={13, 6}, n={14, 6}, o={15, 6}, p={0, 7}, q={1, 7}, r={2, 7}, s={3, 7}, t={4, 7}, u={5, 7}, v={6, 7}, w={7, 7}, x={8, 7}, y={9, 7}, z={10, 7}, A={1, 4},B={2, 4},C={3, 4},D={4, 4},E={5, 4},F={6, 4},G={7, 4},H={8, 4},I={9, 4},J={10, 4},K={11, 4},L={12, 4},M={13, 4},N={14, 4},O={15, 4},P={0, 5},Q={1, 5},R={2, 5},S={3, 5},T={4, 5},U={5, 5},V={6, 5},W={7, 5},X={8, 5},Y={9, 5},Z={10, 5}}

local coords = {
    {"À", "Á", "Â", "È", "Ê", "Ë", "Í", "Ó", "Ô", "Õ", "Ú", "ß", "ã", "õ", "ğ", "İ"},
    {"¹", "Œ", "œ", " ", " ", "Ŵ", "ŵ", "Ž", "ê", "§", "©", " ", " ", " ", " ", " "},
    {" ", "!", "\"", "#", "$", "%", "&", "\'", "(", ")", "*", "+", ",", "-", ".", "/"},
    {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?"},
    {"@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O"},
    {"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "[", "\\", "]", "^", "_"},
    {"`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o"},
    {"p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "{", "|", "}", "~", " "},
    {"Ç", "ü", "é", "â", "ä", "à", "å", "ç", "ê", "ë", "è", "ï", "î", "ì", "Ä", "Å"},
    {"È", "æ", "Æ", "ô", "ö", "ò", "û", "ù", "ÿ", "Ö", "Ü", "Ø", "£", "0", "˟", "ƒ"},
    {"á", "í", "ó", "ú", "ñ", "Ñ", " ", " ", "¿", " ", "¬", "‰", "‰", "¡", "«", "»"},
    {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
    {"α", "β", "Γ", "π", "Σ", "σ", "μ", "γ", " ", "θ", "Ω", " ", "∞", "⧞", "∈", " "},
    {"≡", "±", "≥", "≤", " ", " ", "÷", "≈", " ", " ", " ", "√", " ", "²", " ", " "}
}

function strToChar(str)
    local table = {}
    for i = 1, #str, 1 do
        table[i] = string.sub(str, i, i+1)
    end
    return table
end

function findChar(char)
    for i = 1, 16, 1 do
        for j = 1, 16, 1 do
            if coords[i][j] == char then
                return {j - 1, i - 1}
            end
        end
    end
    return {15, 3}
end

function showText(x, y, message, scale)
    local table = strToChar(message)
    local spaces = 0
    for i, v in ipairs(table) do
        if v ~= nil and v ~= " " and v ~= "" then
            --[[if tonumber(v) then
                v = tonumber(v)
            end
            gfx.ctexture(x + 6*(i-1), y, 8, 8, "font/default8.png", letterCoords[v][1]*0.0625, letterCoords[v][2]*0.0625, 0.0625, 0.0625)]]
            local pos = findChar(v)
            if pos ~= nil then
                gfx.ctexture(x + 6*(i-1) - spaces*2, y, 8, 8, "font/default8.png", pos[1]*0.0625, pos[2]*0.0625, 0.0625, 0.0625)
            end
        else
            spaces = spaces + 1
        end
    end
    gfx.fimage()
end